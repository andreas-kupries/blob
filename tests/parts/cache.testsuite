## -*- tcl -*-
## (c) 2016 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## Test suite for cache stores, custom parts.
#
## The external procedures 'already' and 'badmethod' are used to
## generate implementation specific error messages. Implementations
## have to be provided by the invoking implementation-specific
## testsuite.
#
## The external procedures 'new-store' and 'release-store' are used to
## create and destroy an instance of the store under test.

# # ## ### ##### ######## ############# #####################

test [test-class]-1.0 {new, wrong#args, not enough} -body {
    [test-class] new
} -returnCodes error -result "wrong # args: should be \"[test-class] new backend ...\""

test [test-class]-1.1 {create, wrong#args, not enough} -body {
    [test-class] create foo
} -returnCodes error -result "wrong # args: should be \"[test-class] create foo backend ...\""

test [test-class]-1.2 {constructor, create, existing command} -setup {
    blob::memory create X
    [test-class] create test-store X
} -body {
    [test-class] create test-store X
} -cleanup {
    test-store destroy
    X destroy
} -returnCodes error -result [already test-store]

test [test-class]-1.3 {constructor, create, existing command} -body {
    [test-class] create set
} -returnCodes error -result [already set]

test [test-class]-1.4 {constructor, create} -setup {
    set result {}
    blob::memory create X
} -body {
    lappend result [[test-class] create test-store X]
    lappend result [info commands ::test-store]
    lappend result [test-store size]
} -cleanup {
    test-store destroy
    X destroy
    unset result
} -result {::test-store ::test-store 0}

test [test-class]-1.5 {constructor, new} -setup {
    set result {}
    blob::memory create X
} -body {
    lappend result [set foo [[test-class] new X]]
    lappend result [info commands ::$foo]
    lappend result [$foo size]
} -cleanup {
    $foo destroy
    X destroy
    unset result foo
} -match glob -result {::oo::Obj* ::oo::Obj* 0}

# # ## ### ##### ######## ############# #####################
## Cache-specific introspection and manipulation
## I.e. management of the stores and LRU logs.

test [test-class]-2.0 {put-*, data cache, untouched} -setup {
    set result {}
    new-store
    test-store put-string A
    test-store put-string B
    test-store put-string C
    test-store put-string D
} -body {
    lappend result [test-store blobs]
    lappend result [test-store blobs-loaded]
    lappend result [test-store blobs-lru]
} -cleanup {
    release-store
    unset result
} -result {0 {} {}}

test [test-class]-2.1.0 {put-*, uuid cache, unlimited} -setup {
    set result {}
    new-store
    test-store configure -uuid-limit {}
    test-store put-string A
    test-store put-string B
    test-store put-string C
    test-store put-string D
} -body {
    lappend result [test-store uuids]
    lappend result [lsort [test-store uuids-loaded]]
    lappend result [test-store uuids-lru]
} -cleanup {
    release-store
    unset result
} -result {4 {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec} {}}

test [test-class]-2.1.1 {put-*, uuid cache, limited, not reached} -setup {
    set result {}
    new-store
    test-store put-string A
    test-store put-string B
    test-store put-string C
    test-store put-string D
} -body {
    lappend result [test-store uuids]
    lappend result [lsort [test-store uuids-loaded]]
    lappend result [test-store uuids-lru]
} -cleanup {
    release-store
    unset result
} -result {4 {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec} {6dcd4ce23d88e2ee9568ba546c007c63d9131c1b ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec 32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f}}

test [test-class]-2.1.2 {put-*, uuid cache, limited, keep last entered} -setup {
    set result {}
    new-store
    test-store configure -uuid-limit 2
    test-store put-string A
    test-store put-string B
    test-store put-string C
    test-store put-string D
} -body {
    lappend result [test-store uuids]
    lappend result [lsort [test-store uuids-loaded]]
    lappend result [test-store uuids-lru]
} -cleanup {
    release-store
    unset result
} -result {2 {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f} {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f}}

test [test-class]-2.1.3 {put-*, uuid cache, lru front} -setup {
    set result {}
    new-store
    test-store put-string A
    test-store put-string B
    test-store put-string C
    test-store put-string D
    test-store put-string A
} -body {
    lappend result [test-store uuids]
    lappend result [lsort [test-store uuids-loaded]]
    lappend result [test-store uuids-lru]
} -cleanup {
    release-store
    unset result
} -result {4 {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec} {ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec 32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b}}

test [test-class]-2.1.4 {put-*, uuid cache, delete keeps uuids in cache} -setup {
    set result {}
    new-store
    test-store put-string A
    test-store put-string B
    test-store put-string C
    test-store put-string D
    test-store remove 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f
    test-store remove ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec
    test-store remove 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b
    test-store remove 32096c2e0eff33d844ee6d675407ace18289357d
} -body {
    lappend result [test-store uuids]
    lappend result [lsort [test-store uuids-loaded]]
    lappend result [test-store uuids-lru]
} -cleanup {
    release-store
    unset result
} -result {4 {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec} {50c9e8d5fc98727b4bbc93cf5d64a68db647f04f ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b 32096c2e0eff33d844ee6d675407ace18289357d}}


test [test-class]-3.0 {get-*, uuid cache, also loaded} -setup {
    set result {}
    new-store
    test-memory-store put-string A
    test-memory-store put-string B
    test-memory-store put-string C
    test-memory-store put-string D
    test-store get-string 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b
    test-store get-string ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec
    test-store get-string 32096c2e0eff33d844ee6d675407ace18289357d
    test-store get-string 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f
} -body {
    lappend result [test-store uuids]
    lappend result [lsort [test-store uuids-loaded]]
    lappend result [test-store uuids-lru]
} -cleanup {
    release-store
    unset result
} -result {4 {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec} {6dcd4ce23d88e2ee9568ba546c007c63d9131c1b ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec 32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f}}

test [test-class]-3.1.0 {get-*, blob cache, unlimited} -setup {
    set result {}
    new-store
    test-store configure -blob-limit {}
    test-memory-store put-string A
    test-memory-store put-string B
    test-memory-store put-string C
    test-memory-store put-string D
    test-store get-string 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b
    test-store get-string ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec
    test-store get-string 32096c2e0eff33d844ee6d675407ace18289357d
    test-store get-string 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f
} -body {
    lappend result [test-store blobs]
    lappend result [lsort [test-store blobs-loaded]]
    lappend result [test-store blobs-lru]
} -cleanup {
    release-store
    unset result
} -result {4 {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec} {}}

test [test-class]-3.1.1 {get-*, blob cache, limited, not reached} -setup {
    set result {}
    new-store
    test-memory-store put-string A
    test-memory-store put-string B
    test-memory-store put-string C
    test-memory-store put-string D
    test-store get-string 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b
    test-store get-string ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec
    test-store get-string 32096c2e0eff33d844ee6d675407ace18289357d
    test-store get-string 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f
} -body {
    lappend result [test-store blobs]
    lappend result [lsort [test-store blobs-loaded]]
    lappend result [test-store blobs-lru]
} -cleanup {
    release-store
    unset result
} -result {4 {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec} {6dcd4ce23d88e2ee9568ba546c007c63d9131c1b ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec 32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f}}

test [test-class]-3.1.2 {get-*, blob cache, limited, keep last entered} -setup {
    set result {}
    new-store
    test-store configure -blob-limit 2
    test-memory-store put-string A
    test-memory-store put-string B
    test-memory-store put-string C
    test-memory-store put-string D
    test-store get-string 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b
    test-store get-string ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec
    test-store get-string 32096c2e0eff33d844ee6d675407ace18289357d
    test-store get-string 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f
} -body {
    lappend result [test-store blobs]
    lappend result [lsort [test-store blobs-loaded]]
    lappend result [test-store blobs-lru]
} -cleanup {
    release-store
    unset result
} -result {2 {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f} {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f}}

test [test-class]-3.1.3 {get-*, blob cache, lru front} -setup {
    set result {}
    new-store
    test-memory-store put-string A
    test-memory-store put-string B
    test-memory-store put-string C
    test-memory-store put-string D
    test-store get-string 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b
    test-store get-string ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec
    test-store get-string 32096c2e0eff33d844ee6d675407ace18289357d
    test-store get-string 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f
    test-store get-string 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b
} -body {
    lappend result [test-store blobs]
    lappend result [lsort [test-store blobs-loaded]]
    lappend result [test-store blobs-lru]
} -cleanup {
    release-store
    unset result
} -result {4 {32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec} {ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec 32096c2e0eff33d844ee6d675407ace18289357d 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b}}

test [test-class]-3.1.4 {get-*, blob cache, delete drops blobs from cache} -setup {
    set result {}
    new-store
    test-memory-store put-string A
    test-memory-store put-string B
    test-memory-store put-string C
    test-memory-store put-string D
    test-store get-string 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b
    test-store get-string ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec
    test-store get-string 32096c2e0eff33d844ee6d675407ace18289357d
    test-store get-string 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f
    test-store remove 50c9e8d5fc98727b4bbc93cf5d64a68db647f04f
    test-store remove ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec
    test-store remove 6dcd4ce23d88e2ee9568ba546c007c63d9131c1b
    test-store remove 32096c2e0eff33d844ee6d675407ace18289357d
} -body {
    lappend result [test-store blobs]
    lappend result [lsort [test-store blobs-loaded]]
    lappend result [test-store blobs-lru]
} -cleanup {
    release-store
    unset result
} -result {0 {} {}}

# # ## ### ##### ######## ############# #####################
return
